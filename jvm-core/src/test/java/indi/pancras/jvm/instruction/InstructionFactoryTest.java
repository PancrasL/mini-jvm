package indi.pancras.jvm.instruction;

import org.junit.jupiter.api.Test;

import indi.pancras.jvm.instruction.comparison.Dcmpg;
import indi.pancras.jvm.instruction.comparison.Dcmpl;
import indi.pancras.jvm.instruction.comparison.Fcmpg;
import indi.pancras.jvm.instruction.comparison.Fcmpl;
import indi.pancras.jvm.instruction.comparison.IfAcmpeq;
import indi.pancras.jvm.instruction.comparison.IfAcmpne;
import indi.pancras.jvm.instruction.comparison.IfIcmpeq;
import indi.pancras.jvm.instruction.comparison.IfIcmpge;
import indi.pancras.jvm.instruction.comparison.IfIcmpgt;
import indi.pancras.jvm.instruction.comparison.IfIcmple;
import indi.pancras.jvm.instruction.comparison.IfIcmplt;
import indi.pancras.jvm.instruction.comparison.IfIcmpne;
import indi.pancras.jvm.instruction.comparison.Ifeq;
import indi.pancras.jvm.instruction.comparison.Ifge;
import indi.pancras.jvm.instruction.comparison.Ifgt;
import indi.pancras.jvm.instruction.comparison.Ifle;
import indi.pancras.jvm.instruction.comparison.Iflt;
import indi.pancras.jvm.instruction.comparison.Ifne;
import indi.pancras.jvm.instruction.comparison.Lcmp;
import indi.pancras.jvm.instruction.constant.AconstNull;
import indi.pancras.jvm.instruction.constant.BIpush;
import indi.pancras.jvm.instruction.constant.Dconst0;
import indi.pancras.jvm.instruction.constant.Dconst1;
import indi.pancras.jvm.instruction.constant.Fconst0;
import indi.pancras.jvm.instruction.constant.Fconst1;
import indi.pancras.jvm.instruction.constant.Fconst2;
import indi.pancras.jvm.instruction.constant.Iconst0;
import indi.pancras.jvm.instruction.constant.Iconst1;
import indi.pancras.jvm.instruction.constant.Iconst2;
import indi.pancras.jvm.instruction.constant.Iconst3;
import indi.pancras.jvm.instruction.constant.Iconst4;
import indi.pancras.jvm.instruction.constant.Iconst5;
import indi.pancras.jvm.instruction.constant.Iconstm1;
import indi.pancras.jvm.instruction.constant.LDC;
import indi.pancras.jvm.instruction.constant.LDC2W;
import indi.pancras.jvm.instruction.constant.LDCW;
import indi.pancras.jvm.instruction.constant.Lconst0;
import indi.pancras.jvm.instruction.constant.Lconst1;
import indi.pancras.jvm.instruction.constant.Nop;
import indi.pancras.jvm.instruction.constant.SIpush;
import indi.pancras.jvm.instruction.control.Areturn;
import indi.pancras.jvm.instruction.control.Dreturn;
import indi.pancras.jvm.instruction.control.Freturn;
import indi.pancras.jvm.instruction.control.Goto;
import indi.pancras.jvm.instruction.control.Ireturn;
import indi.pancras.jvm.instruction.control.Jsr;
import indi.pancras.jvm.instruction.control.Lookupswitch;
import indi.pancras.jvm.instruction.control.Lreturn;
import indi.pancras.jvm.instruction.control.Ret;
import indi.pancras.jvm.instruction.control.Return;
import indi.pancras.jvm.instruction.control.Tableswitch;
import indi.pancras.jvm.instruction.conversion.D2F;
import indi.pancras.jvm.instruction.conversion.D2I;
import indi.pancras.jvm.instruction.conversion.D2L;
import indi.pancras.jvm.instruction.conversion.F2D;
import indi.pancras.jvm.instruction.conversion.F2I;
import indi.pancras.jvm.instruction.conversion.F2L;
import indi.pancras.jvm.instruction.conversion.I2B;
import indi.pancras.jvm.instruction.conversion.I2C;
import indi.pancras.jvm.instruction.conversion.I2D;
import indi.pancras.jvm.instruction.conversion.I2F;
import indi.pancras.jvm.instruction.conversion.I2L;
import indi.pancras.jvm.instruction.conversion.I2S;
import indi.pancras.jvm.instruction.conversion.L2D;
import indi.pancras.jvm.instruction.conversion.L2F;
import indi.pancras.jvm.instruction.conversion.L2I;
import indi.pancras.jvm.instruction.extend.Gotow;
import indi.pancras.jvm.instruction.extend.Ifnonnull;
import indi.pancras.jvm.instruction.extend.Ifnull;
import indi.pancras.jvm.instruction.extend.Jsrw;
import indi.pancras.jvm.instruction.extend.Multianewarray;
import indi.pancras.jvm.instruction.extend.Wide;
import indi.pancras.jvm.instruction.load.AAload;
import indi.pancras.jvm.instruction.load.Aload;
import indi.pancras.jvm.instruction.load.Aload0;
import indi.pancras.jvm.instruction.load.Aload1;
import indi.pancras.jvm.instruction.load.Aload2;
import indi.pancras.jvm.instruction.load.Aload3;
import indi.pancras.jvm.instruction.load.BAload;
import indi.pancras.jvm.instruction.load.CAload;
import indi.pancras.jvm.instruction.load.DAload;
import indi.pancras.jvm.instruction.load.Dload;
import indi.pancras.jvm.instruction.load.Dload0;
import indi.pancras.jvm.instruction.load.Dload1;
import indi.pancras.jvm.instruction.load.Dload2;
import indi.pancras.jvm.instruction.load.Dload3;
import indi.pancras.jvm.instruction.load.FAload;
import indi.pancras.jvm.instruction.load.Fload;
import indi.pancras.jvm.instruction.load.Fload0;
import indi.pancras.jvm.instruction.load.Fload1;
import indi.pancras.jvm.instruction.load.Fload2;
import indi.pancras.jvm.instruction.load.Fload3;
import indi.pancras.jvm.instruction.load.IAload;
import indi.pancras.jvm.instruction.load.Iload;
import indi.pancras.jvm.instruction.load.Iload0;
import indi.pancras.jvm.instruction.load.Iload1;
import indi.pancras.jvm.instruction.load.Iload2;
import indi.pancras.jvm.instruction.load.Iload3;
import indi.pancras.jvm.instruction.load.LAload;
import indi.pancras.jvm.instruction.load.Lload;
import indi.pancras.jvm.instruction.load.Lload0;
import indi.pancras.jvm.instruction.load.Lload1;
import indi.pancras.jvm.instruction.load.Lload2;
import indi.pancras.jvm.instruction.load.Lload3;
import indi.pancras.jvm.instruction.load.SAload;
import indi.pancras.jvm.instruction.math.Dadd;
import indi.pancras.jvm.instruction.math.Ddiv;
import indi.pancras.jvm.instruction.math.Dmul;
import indi.pancras.jvm.instruction.math.Dneg;
import indi.pancras.jvm.instruction.math.Drem;
import indi.pancras.jvm.instruction.math.Dsub;
import indi.pancras.jvm.instruction.math.Fadd;
import indi.pancras.jvm.instruction.math.Fdiv;
import indi.pancras.jvm.instruction.math.Fmul;
import indi.pancras.jvm.instruction.math.Fneg;
import indi.pancras.jvm.instruction.math.Frem;
import indi.pancras.jvm.instruction.math.Fsub;
import indi.pancras.jvm.instruction.math.Iadd;
import indi.pancras.jvm.instruction.math.Iand;
import indi.pancras.jvm.instruction.math.Idiv;
import indi.pancras.jvm.instruction.math.Iinc;
import indi.pancras.jvm.instruction.math.Imul;
import indi.pancras.jvm.instruction.math.Ineg;
import indi.pancras.jvm.instruction.math.Ior;
import indi.pancras.jvm.instruction.math.Irem;
import indi.pancras.jvm.instruction.math.Ishl;
import indi.pancras.jvm.instruction.math.Ishr;
import indi.pancras.jvm.instruction.math.Isub;
import indi.pancras.jvm.instruction.math.Iushr;
import indi.pancras.jvm.instruction.math.Ixor;
import indi.pancras.jvm.instruction.math.Ladd;
import indi.pancras.jvm.instruction.math.Land;
import indi.pancras.jvm.instruction.math.Ldiv;
import indi.pancras.jvm.instruction.math.Lmul;
import indi.pancras.jvm.instruction.math.Lneg;
import indi.pancras.jvm.instruction.math.Lor;
import indi.pancras.jvm.instruction.math.Lrem;
import indi.pancras.jvm.instruction.math.Lshl;
import indi.pancras.jvm.instruction.math.Lshr;
import indi.pancras.jvm.instruction.math.Lsub;
import indi.pancras.jvm.instruction.math.Lushr;
import indi.pancras.jvm.instruction.math.Lxor;
import indi.pancras.jvm.instruction.references.Anewarray;
import indi.pancras.jvm.instruction.references.Arraylength;
import indi.pancras.jvm.instruction.references.Athrow;
import indi.pancras.jvm.instruction.references.Checkcast;
import indi.pancras.jvm.instruction.references.Getfield;
import indi.pancras.jvm.instruction.references.Getstatic;
import indi.pancras.jvm.instruction.references.Instanceof;
import indi.pancras.jvm.instruction.references.Invokedynamic;
import indi.pancras.jvm.instruction.references.Invokeinterface;
import indi.pancras.jvm.instruction.references.Invokespecial;
import indi.pancras.jvm.instruction.references.Invokestatic;
import indi.pancras.jvm.instruction.references.Invokevirtual;
import indi.pancras.jvm.instruction.references.Monitorenter;
import indi.pancras.jvm.instruction.references.Monitorexit;
import indi.pancras.jvm.instruction.references.New;
import indi.pancras.jvm.instruction.references.Newarray;
import indi.pancras.jvm.instruction.references.Putfield;
import indi.pancras.jvm.instruction.references.Putstatic;
import indi.pancras.jvm.instruction.reserved.Breakpoint;
import indi.pancras.jvm.instruction.reserved.Impdep1;
import indi.pancras.jvm.instruction.reserved.Impdep2;
import indi.pancras.jvm.instruction.stack.Dup;
import indi.pancras.jvm.instruction.stack.Dup2;
import indi.pancras.jvm.instruction.stack.Dup2x1;
import indi.pancras.jvm.instruction.stack.Dup2x2;
import indi.pancras.jvm.instruction.stack.Dupx1;
import indi.pancras.jvm.instruction.stack.Dupx2;
import indi.pancras.jvm.instruction.stack.Pop;
import indi.pancras.jvm.instruction.stack.Pop2;
import indi.pancras.jvm.instruction.stack.Swap;
import indi.pancras.jvm.instruction.store.AAstore;
import indi.pancras.jvm.instruction.store.Astore;
import indi.pancras.jvm.instruction.store.Astore0;
import indi.pancras.jvm.instruction.store.Astore1;
import indi.pancras.jvm.instruction.store.Astore2;
import indi.pancras.jvm.instruction.store.Astore3;
import indi.pancras.jvm.instruction.store.BAstore;
import indi.pancras.jvm.instruction.store.CAstore;
import indi.pancras.jvm.instruction.store.DAstore;
import indi.pancras.jvm.instruction.store.Dstore;
import indi.pancras.jvm.instruction.store.Dstore0;
import indi.pancras.jvm.instruction.store.Dstore1;
import indi.pancras.jvm.instruction.store.Dstore2;
import indi.pancras.jvm.instruction.store.Dstore3;
import indi.pancras.jvm.instruction.store.FAstore;
import indi.pancras.jvm.instruction.store.Fstore;
import indi.pancras.jvm.instruction.store.Fstore0;
import indi.pancras.jvm.instruction.store.Fstore1;
import indi.pancras.jvm.instruction.store.Fstore2;
import indi.pancras.jvm.instruction.store.Fstore3;
import indi.pancras.jvm.instruction.store.IAstore;
import indi.pancras.jvm.instruction.store.Istore;
import indi.pancras.jvm.instruction.store.Istore0;
import indi.pancras.jvm.instruction.store.Istore1;
import indi.pancras.jvm.instruction.store.Istore2;
import indi.pancras.jvm.instruction.store.Istore3;
import indi.pancras.jvm.instruction.store.LAstore;
import indi.pancras.jvm.instruction.store.Lstore;
import indi.pancras.jvm.instruction.store.Lstore0;
import indi.pancras.jvm.instruction.store.Lstore1;
import indi.pancras.jvm.instruction.store.Lstore2;
import indi.pancras.jvm.instruction.store.Lstore3;
import indi.pancras.jvm.instruction.store.SAstore;

import static org.junit.jupiter.api.Assertions.assertEquals;

class InstructionFactoryTest {
    @Test
    void testGetByOpcode() {
        // Constants
        assertEquals(Nop.class, InstructionFactory.getByOpcode(0x00).getClass());
        assertEquals(AconstNull.class, InstructionFactory.getByOpcode(0x01).getClass());
        assertEquals(Iconstm1.class, InstructionFactory.getByOpcode(0x02).getClass());
        assertEquals(Iconst0.class, InstructionFactory.getByOpcode(0x03).getClass());
        assertEquals(Iconst1.class, InstructionFactory.getByOpcode(0x04).getClass());
        assertEquals(Iconst2.class, InstructionFactory.getByOpcode(0x05).getClass());
        assertEquals(Iconst3.class, InstructionFactory.getByOpcode(0x06).getClass());
        assertEquals(Iconst4.class, InstructionFactory.getByOpcode(0x07).getClass());
        assertEquals(Iconst5.class, InstructionFactory.getByOpcode(0x08).getClass());
        assertEquals(Lconst0.class, InstructionFactory.getByOpcode(0x09).getClass());
        assertEquals(Lconst1.class, InstructionFactory.getByOpcode(0x0a).getClass());
        assertEquals(Fconst0.class, InstructionFactory.getByOpcode(0x0b).getClass());
        assertEquals(Fconst1.class, InstructionFactory.getByOpcode(0x0c).getClass());
        assertEquals(Fconst2.class, InstructionFactory.getByOpcode(0x0d).getClass());
        assertEquals(Dconst0.class, InstructionFactory.getByOpcode(0x0e).getClass());
        assertEquals(Dconst1.class, InstructionFactory.getByOpcode(0x0f).getClass());
        assertEquals(BIpush.class, InstructionFactory.getByOpcode(0x10).getClass());
        assertEquals(SIpush.class, InstructionFactory.getByOpcode(0x11).getClass());
        assertEquals(LDC.class, InstructionFactory.getByOpcode(0x12).getClass());
        assertEquals(LDCW.class, InstructionFactory.getByOpcode(0x13).getClass());
        assertEquals(LDC2W.class, InstructionFactory.getByOpcode(0x14).getClass());

        // Loads
        assertEquals(Iload.class, InstructionFactory.getByOpcode(0x15).getClass());
        assertEquals(Lload.class, InstructionFactory.getByOpcode(0x16).getClass());
        assertEquals(Fload.class, InstructionFactory.getByOpcode(0x17).getClass());
        assertEquals(Dload.class, InstructionFactory.getByOpcode(0x18).getClass());
        assertEquals(Aload.class, InstructionFactory.getByOpcode(0x19).getClass());
        assertEquals(Iload0.class, InstructionFactory.getByOpcode(0x1a).getClass());
        assertEquals(Iload1.class, InstructionFactory.getByOpcode(0x1b).getClass());
        assertEquals(Iload2.class, InstructionFactory.getByOpcode(0x1c).getClass());
        assertEquals(Iload3.class, InstructionFactory.getByOpcode(0x1d).getClass());
        assertEquals(Lload0.class, InstructionFactory.getByOpcode(0x1e).getClass());
        assertEquals(Lload1.class, InstructionFactory.getByOpcode(0x1f).getClass());
        assertEquals(Lload2.class, InstructionFactory.getByOpcode(0x20).getClass());
        assertEquals(Lload3.class, InstructionFactory.getByOpcode(0x21).getClass());
        assertEquals(Fload0.class, InstructionFactory.getByOpcode(0x22).getClass());
        assertEquals(Fload1.class, InstructionFactory.getByOpcode(0x23).getClass());
        assertEquals(Fload2.class, InstructionFactory.getByOpcode(0x24).getClass());
        assertEquals(Fload3.class, InstructionFactory.getByOpcode(0x25).getClass());
        assertEquals(Dload0.class, InstructionFactory.getByOpcode(0x26).getClass());
        assertEquals(Dload1.class, InstructionFactory.getByOpcode(0x27).getClass());
        assertEquals(Dload2.class, InstructionFactory.getByOpcode(0x28).getClass());
        assertEquals(Dload3.class, InstructionFactory.getByOpcode(0x29).getClass());
        assertEquals(Aload0.class, InstructionFactory.getByOpcode(0x2a).getClass());
        assertEquals(Aload1.class, InstructionFactory.getByOpcode(0x2b).getClass());
        assertEquals(Aload2.class, InstructionFactory.getByOpcode(0x2c).getClass());
        assertEquals(Aload3.class, InstructionFactory.getByOpcode(0x2d).getClass());
        assertEquals(IAload.class, InstructionFactory.getByOpcode(0x2e).getClass());
        assertEquals(LAload.class, InstructionFactory.getByOpcode(0x2f).getClass());
        assertEquals(FAload.class, InstructionFactory.getByOpcode(0x30).getClass());
        assertEquals(DAload.class, InstructionFactory.getByOpcode(0x31).getClass());
        assertEquals(AAload.class, InstructionFactory.getByOpcode(0x32).getClass());
        assertEquals(BAload.class, InstructionFactory.getByOpcode(0x33).getClass());
        assertEquals(CAload.class, InstructionFactory.getByOpcode(0x34).getClass());
        assertEquals(SAload.class, InstructionFactory.getByOpcode(0x35).getClass());

        // Stores
        assertEquals(Istore.class, InstructionFactory.getByOpcode(0x36).getClass());
        assertEquals(Lstore.class, InstructionFactory.getByOpcode(0x37).getClass());
        assertEquals(Fstore.class, InstructionFactory.getByOpcode(0x38).getClass());
        assertEquals(Dstore.class, InstructionFactory.getByOpcode(0x39).getClass());
        assertEquals(Astore.class, InstructionFactory.getByOpcode(0x3a).getClass());
        assertEquals(Istore0.class, InstructionFactory.getByOpcode(0x3b).getClass());
        assertEquals(Istore1.class, InstructionFactory.getByOpcode(0x3c).getClass());
        assertEquals(Istore2.class, InstructionFactory.getByOpcode(0x3d).getClass());
        assertEquals(Istore3.class, InstructionFactory.getByOpcode(0x3e).getClass());
        assertEquals(Lstore0.class, InstructionFactory.getByOpcode(0x3f).getClass());
        assertEquals(Lstore1.class, InstructionFactory.getByOpcode(0x40).getClass());
        assertEquals(Lstore2.class, InstructionFactory.getByOpcode(0x41).getClass());
        assertEquals(Lstore3.class, InstructionFactory.getByOpcode(0x42).getClass());
        assertEquals(Fstore0.class, InstructionFactory.getByOpcode(0x43).getClass());
        assertEquals(Fstore1.class, InstructionFactory.getByOpcode(0x44).getClass());
        assertEquals(Fstore2.class, InstructionFactory.getByOpcode(0x45).getClass());
        assertEquals(Fstore3.class, InstructionFactory.getByOpcode(0x46).getClass());
        assertEquals(Dstore0.class, InstructionFactory.getByOpcode(0x47).getClass());
        assertEquals(Dstore1.class, InstructionFactory.getByOpcode(0x48).getClass());
        assertEquals(Dstore2.class, InstructionFactory.getByOpcode(0x49).getClass());
        assertEquals(Dstore3.class, InstructionFactory.getByOpcode(0x4a).getClass());
        assertEquals(Astore0.class, InstructionFactory.getByOpcode(0x4b).getClass());
        assertEquals(Astore1.class, InstructionFactory.getByOpcode(0x4c).getClass());
        assertEquals(Astore2.class, InstructionFactory.getByOpcode(0x4d).getClass());
        assertEquals(Astore3.class, InstructionFactory.getByOpcode(0x4e).getClass());
        assertEquals(IAstore.class, InstructionFactory.getByOpcode(0x4f).getClass());
        assertEquals(LAstore.class, InstructionFactory.getByOpcode(0x50).getClass());
        assertEquals(FAstore.class, InstructionFactory.getByOpcode(0x51).getClass());
        assertEquals(DAstore.class, InstructionFactory.getByOpcode(0x52).getClass());
        assertEquals(AAstore.class, InstructionFactory.getByOpcode(0x53).getClass());
        assertEquals(BAstore.class, InstructionFactory.getByOpcode(0x54).getClass());
        assertEquals(CAstore.class, InstructionFactory.getByOpcode(0x55).getClass());
        assertEquals(SAstore.class, InstructionFactory.getByOpcode(0x56).getClass());

        // Stack
        assertEquals(Pop.class, InstructionFactory.getByOpcode(0x57).getClass());
        assertEquals(Pop2.class, InstructionFactory.getByOpcode(0x58).getClass());
        assertEquals(Dup.class, InstructionFactory.getByOpcode(0x59).getClass());
        assertEquals(Dupx1.class, InstructionFactory.getByOpcode(0x5a).getClass());
        assertEquals(Dupx2.class, InstructionFactory.getByOpcode(0x5b).getClass());
        assertEquals(Dup2.class, InstructionFactory.getByOpcode(0x5c).getClass());
        assertEquals(Dup2x1.class, InstructionFactory.getByOpcode(0x5d).getClass());
        assertEquals(Dup2x2.class, InstructionFactory.getByOpcode(0x5e).getClass());
        assertEquals(Swap.class, InstructionFactory.getByOpcode(0x5f).getClass());

        // Math
        assertEquals(Iadd.class, InstructionFactory.getByOpcode(0x60).getClass());
        assertEquals(Ladd.class, InstructionFactory.getByOpcode(0x61).getClass());
        assertEquals(Fadd.class, InstructionFactory.getByOpcode(0x62).getClass());
        assertEquals(Dadd.class, InstructionFactory.getByOpcode(0x63).getClass());
        assertEquals(Isub.class, InstructionFactory.getByOpcode(0x64).getClass());
        assertEquals(Lsub.class, InstructionFactory.getByOpcode(0x65).getClass());
        assertEquals(Fsub.class, InstructionFactory.getByOpcode(0x66).getClass());
        assertEquals(Dsub.class, InstructionFactory.getByOpcode(0x67).getClass());
        assertEquals(Imul.class, InstructionFactory.getByOpcode(0x68).getClass());
        assertEquals(Lmul.class, InstructionFactory.getByOpcode(0x69).getClass());
        assertEquals(Fmul.class, InstructionFactory.getByOpcode(0x6a).getClass());
        assertEquals(Dmul.class, InstructionFactory.getByOpcode(0x6b).getClass());
        assertEquals(Idiv.class, InstructionFactory.getByOpcode(0x6c).getClass());
        assertEquals(Ldiv.class, InstructionFactory.getByOpcode(0x6d).getClass());
        assertEquals(Fdiv.class, InstructionFactory.getByOpcode(0x6e).getClass());
        assertEquals(Ddiv.class, InstructionFactory.getByOpcode(0x6f).getClass());
        assertEquals(Irem.class, InstructionFactory.getByOpcode(0x70).getClass());
        assertEquals(Lrem.class, InstructionFactory.getByOpcode(0x71).getClass());
        assertEquals(Frem.class, InstructionFactory.getByOpcode(0x72).getClass());
        assertEquals(Drem.class, InstructionFactory.getByOpcode(0x73).getClass());
        assertEquals(Ineg.class, InstructionFactory.getByOpcode(0x74).getClass());
        assertEquals(Lneg.class, InstructionFactory.getByOpcode(0x75).getClass());
        assertEquals(Fneg.class, InstructionFactory.getByOpcode(0x76).getClass());
        assertEquals(Dneg.class, InstructionFactory.getByOpcode(0x77).getClass());
        assertEquals(Ishl.class, InstructionFactory.getByOpcode(0x78).getClass());
        assertEquals(Lshl.class, InstructionFactory.getByOpcode(0x79).getClass());
        assertEquals(Ishr.class, InstructionFactory.getByOpcode(0x7a).getClass());
        assertEquals(Lshr.class, InstructionFactory.getByOpcode(0x7b).getClass());
        assertEquals(Iushr.class, InstructionFactory.getByOpcode(0x7c).getClass());
        assertEquals(Lushr.class, InstructionFactory.getByOpcode(0x7d).getClass());
        assertEquals(Iand.class, InstructionFactory.getByOpcode(0x7e).getClass());
        assertEquals(Land.class, InstructionFactory.getByOpcode(0x7f).getClass());
        assertEquals(Ior.class, InstructionFactory.getByOpcode(0x80).getClass());
        assertEquals(Lor.class, InstructionFactory.getByOpcode(0x81).getClass());
        assertEquals(Ixor.class, InstructionFactory.getByOpcode(0x82).getClass());
        assertEquals(Lxor.class, InstructionFactory.getByOpcode(0x83).getClass());
        assertEquals(Iinc.class, InstructionFactory.getByOpcode(0x84).getClass());

        // Conversions
        assertEquals(I2L.class, InstructionFactory.getByOpcode(0x85).getClass());
        assertEquals(I2F.class, InstructionFactory.getByOpcode(0x86).getClass());
        assertEquals(I2D.class, InstructionFactory.getByOpcode(0x87).getClass());
        assertEquals(L2I.class, InstructionFactory.getByOpcode(0x88).getClass());
        assertEquals(L2F.class, InstructionFactory.getByOpcode(0x89).getClass());
        assertEquals(L2D.class, InstructionFactory.getByOpcode(0x8a).getClass());
        assertEquals(F2I.class, InstructionFactory.getByOpcode(0x8b).getClass());
        assertEquals(F2L.class, InstructionFactory.getByOpcode(0x8c).getClass());
        assertEquals(F2D.class, InstructionFactory.getByOpcode(0x8d).getClass());
        assertEquals(D2I.class, InstructionFactory.getByOpcode(0x8e).getClass());
        assertEquals(D2L.class, InstructionFactory.getByOpcode(0x8f).getClass());
        assertEquals(D2F.class, InstructionFactory.getByOpcode(0x90).getClass());
        assertEquals(I2B.class, InstructionFactory.getByOpcode(0x91).getClass());
        assertEquals(I2C.class, InstructionFactory.getByOpcode(0x92).getClass());
        assertEquals(I2S.class, InstructionFactory.getByOpcode(0x93).getClass());

        // Comparisons
        assertEquals(Lcmp.class, InstructionFactory.getByOpcode(0x94).getClass());
        assertEquals(Fcmpl.class, InstructionFactory.getByOpcode(0x95).getClass());
        assertEquals(Fcmpg.class, InstructionFactory.getByOpcode(0x96).getClass());
        assertEquals(Dcmpl.class, InstructionFactory.getByOpcode(0x97).getClass());
        assertEquals(Dcmpg.class, InstructionFactory.getByOpcode(0x98).getClass());
        assertEquals(Ifeq.class, InstructionFactory.getByOpcode(0x99).getClass());
        assertEquals(Ifne.class, InstructionFactory.getByOpcode(0x9a).getClass());
        assertEquals(Iflt.class, InstructionFactory.getByOpcode(0x9b).getClass());
        assertEquals(Ifge.class, InstructionFactory.getByOpcode(0x9c).getClass());
        assertEquals(Ifgt.class, InstructionFactory.getByOpcode(0x9d).getClass());
        assertEquals(Ifle.class, InstructionFactory.getByOpcode(0x9e).getClass());
        assertEquals(IfIcmpeq.class, InstructionFactory.getByOpcode(0x9f).getClass());
        assertEquals(IfIcmpne.class, InstructionFactory.getByOpcode(0xa0).getClass());
        assertEquals(IfIcmplt.class, InstructionFactory.getByOpcode(0xa1).getClass());
        assertEquals(IfIcmpge.class, InstructionFactory.getByOpcode(0xa2).getClass());
        assertEquals(IfIcmpgt.class, InstructionFactory.getByOpcode(0xa3).getClass());
        assertEquals(IfIcmple.class, InstructionFactory.getByOpcode(0xa4).getClass());
        assertEquals(IfAcmpeq.class, InstructionFactory.getByOpcode(0xa5).getClass());
        assertEquals(IfAcmpne.class, InstructionFactory.getByOpcode(0xa6).getClass());

        // Control
        assertEquals(Goto.class, InstructionFactory.getByOpcode(0xa7).getClass());
        assertEquals(Jsr.class, InstructionFactory.getByOpcode(0xa8).getClass());
        assertEquals(Ret.class, InstructionFactory.getByOpcode(0xa9).getClass());
        assertEquals(Tableswitch.class, InstructionFactory.getByOpcode(0xaa).getClass());
        assertEquals(Lookupswitch.class, InstructionFactory.getByOpcode(0xab).getClass());
        assertEquals(Ireturn.class, InstructionFactory.getByOpcode(0xac).getClass());
        assertEquals(Lreturn.class, InstructionFactory.getByOpcode(0xad).getClass());
        assertEquals(Freturn.class, InstructionFactory.getByOpcode(0xae).getClass());
        assertEquals(Dreturn.class, InstructionFactory.getByOpcode(0xaf).getClass());
        assertEquals(Areturn.class, InstructionFactory.getByOpcode(0xb0).getClass());
        assertEquals(Return.class, InstructionFactory.getByOpcode(0xb1).getClass());

        // References
        assertEquals(Getstatic.class, InstructionFactory.getByOpcode(0xb2).getClass());
        assertEquals(Putstatic.class, InstructionFactory.getByOpcode(0xb3).getClass());
        assertEquals(Getfield.class, InstructionFactory.getByOpcode(0xb4).getClass());
        assertEquals(Putfield.class, InstructionFactory.getByOpcode(0xb5).getClass());
        assertEquals(Invokevirtual.class, InstructionFactory.getByOpcode(0xb6).getClass());
        assertEquals(Invokespecial.class, InstructionFactory.getByOpcode(0xb7).getClass());
        assertEquals(Invokestatic.class, InstructionFactory.getByOpcode(0xb8).getClass());
        assertEquals(Invokeinterface.class, InstructionFactory.getByOpcode(0xb9).getClass());
        assertEquals(Invokedynamic.class, InstructionFactory.getByOpcode(0xba).getClass());
        assertEquals(New.class, InstructionFactory.getByOpcode(0xbb).getClass());
        assertEquals(Newarray.class, InstructionFactory.getByOpcode(0xbc).getClass());
        assertEquals(Anewarray.class, InstructionFactory.getByOpcode(0xbd).getClass());
        assertEquals(Arraylength.class, InstructionFactory.getByOpcode(0xbe).getClass());
        assertEquals(Athrow.class, InstructionFactory.getByOpcode(0xbf).getClass());
        assertEquals(Checkcast.class, InstructionFactory.getByOpcode(0xc0).getClass());
        assertEquals(Instanceof.class, InstructionFactory.getByOpcode(0xc1).getClass());
        assertEquals(Monitorenter.class, InstructionFactory.getByOpcode(0xc2).getClass());
        assertEquals(Monitorexit.class, InstructionFactory.getByOpcode(0xc3).getClass());

        // Extended
        assertEquals(Wide.class, InstructionFactory.getByOpcode(0xc4).getClass());
        assertEquals(Multianewarray.class, InstructionFactory.getByOpcode(0xc5).getClass());
        assertEquals(Ifnull.class, InstructionFactory.getByOpcode(0xc6).getClass());
        assertEquals(Ifnonnull.class, InstructionFactory.getByOpcode(0xc7).getClass());
        assertEquals(Gotow.class, InstructionFactory.getByOpcode(0xc8).getClass());
        assertEquals(Jsrw.class, InstructionFactory.getByOpcode(0xc9).getClass());

        // Reserved
        assertEquals(Breakpoint.class, InstructionFactory.getByOpcode(0xca).getClass());
        assertEquals(Impdep1.class, InstructionFactory.getByOpcode(0xfe).getClass());
        assertEquals(Impdep2.class, InstructionFactory.getByOpcode(0xff).getClass());
    }

    @Test
    void testGetByOpName() {
        // Constants
        assertEquals(Nop.class, InstructionFactory.getByOpName("nop").getClass());
        assertEquals(AconstNull.class, InstructionFactory.getByOpName("aconst_null").getClass());
        assertEquals(Iconstm1.class, InstructionFactory.getByOpName("iconst_m1").getClass());
        assertEquals(Iconst0.class, InstructionFactory.getByOpName("iconst_0").getClass());
        assertEquals(Iconst1.class, InstructionFactory.getByOpName("iconst_1").getClass());
        assertEquals(Iconst2.class, InstructionFactory.getByOpName("iconst_2").getClass());
        assertEquals(Iconst3.class, InstructionFactory.getByOpName("iconst_3").getClass());
        assertEquals(Iconst4.class, InstructionFactory.getByOpName("iconst_4").getClass());
        assertEquals(Iconst5.class, InstructionFactory.getByOpName("iconst_5").getClass());
        assertEquals(Lconst0.class, InstructionFactory.getByOpName("lconst_0").getClass());
        assertEquals(Lconst1.class, InstructionFactory.getByOpName("lconst_1").getClass());
        assertEquals(Fconst0.class, InstructionFactory.getByOpName("fconst_0").getClass());
        assertEquals(Fconst1.class, InstructionFactory.getByOpName("fconst_1").getClass());
        assertEquals(Fconst2.class, InstructionFactory.getByOpName("fconst_2").getClass());
        assertEquals(Dconst0.class, InstructionFactory.getByOpName("dconst_0").getClass());
        assertEquals(Dconst1.class, InstructionFactory.getByOpName("dconst_1").getClass());
        assertEquals(BIpush.class, InstructionFactory.getByOpName("bipush").getClass());
        assertEquals(SIpush.class, InstructionFactory.getByOpName("sipush").getClass());
        assertEquals(LDC.class, InstructionFactory.getByOpName("ldc").getClass());
        assertEquals(LDCW.class, InstructionFactory.getByOpName("ldc_w").getClass());
        assertEquals(LDC2W.class, InstructionFactory.getByOpName("ldc2_w").getClass());

        // Loads
        assertEquals(Iload.class, InstructionFactory.getByOpName("iload").getClass());
        assertEquals(Lload.class, InstructionFactory.getByOpName("lload").getClass());
        assertEquals(Fload.class, InstructionFactory.getByOpName("fload").getClass());
        assertEquals(Dload.class, InstructionFactory.getByOpName("dload").getClass());
        assertEquals(Aload.class, InstructionFactory.getByOpName("aload").getClass());
        assertEquals(Iload0.class, InstructionFactory.getByOpName("iload_0").getClass());
        assertEquals(Iload1.class, InstructionFactory.getByOpName("iload_1").getClass());
        assertEquals(Iload2.class, InstructionFactory.getByOpName("iload_2").getClass());
        assertEquals(Iload3.class, InstructionFactory.getByOpName("iload_3").getClass());
        assertEquals(Lload0.class, InstructionFactory.getByOpName("lload_0").getClass());
        assertEquals(Lload1.class, InstructionFactory.getByOpName("lload_1").getClass());
        assertEquals(Lload2.class, InstructionFactory.getByOpName("lload_2").getClass());
        assertEquals(Lload3.class, InstructionFactory.getByOpName("lload_3").getClass());
        assertEquals(Fload0.class, InstructionFactory.getByOpName("fload_0").getClass());
        assertEquals(Fload1.class, InstructionFactory.getByOpName("fload_1").getClass());
        assertEquals(Fload2.class, InstructionFactory.getByOpName("fload_2").getClass());
        assertEquals(Fload3.class, InstructionFactory.getByOpName("fload_3").getClass());
        assertEquals(Dload0.class, InstructionFactory.getByOpName("dload_0").getClass());
        assertEquals(Dload1.class, InstructionFactory.getByOpName("dload_1").getClass());
        assertEquals(Dload2.class, InstructionFactory.getByOpName("dload_2").getClass());
        assertEquals(Dload3.class, InstructionFactory.getByOpName("dload_3").getClass());
        assertEquals(Aload0.class, InstructionFactory.getByOpName("aload_0").getClass());
        assertEquals(Aload1.class, InstructionFactory.getByOpName("aload_1").getClass());
        assertEquals(Aload2.class, InstructionFactory.getByOpName("aload_2").getClass());
        assertEquals(Aload3.class, InstructionFactory.getByOpName("aload_3").getClass());
        assertEquals(IAload.class, InstructionFactory.getByOpName("iaload").getClass());
        assertEquals(LAload.class, InstructionFactory.getByOpName("laload").getClass());
        assertEquals(FAload.class, InstructionFactory.getByOpName("faload").getClass());
        assertEquals(DAload.class, InstructionFactory.getByOpName("daload").getClass());
        assertEquals(AAload.class, InstructionFactory.getByOpName("aaload").getClass());
        assertEquals(BAload.class, InstructionFactory.getByOpName("baload").getClass());
        assertEquals(CAload.class, InstructionFactory.getByOpName("caload").getClass());
        assertEquals(SAload.class, InstructionFactory.getByOpName("saload").getClass());

        // Stores
        assertEquals(Istore.class, InstructionFactory.getByOpName("istore").getClass());
        assertEquals(Lstore.class, InstructionFactory.getByOpName("lstore").getClass());
        assertEquals(Fstore.class, InstructionFactory.getByOpName("fstore").getClass());
        assertEquals(Dstore.class, InstructionFactory.getByOpName("dstore").getClass());
        assertEquals(Astore.class, InstructionFactory.getByOpName("astore").getClass());
        assertEquals(Istore0.class, InstructionFactory.getByOpName("istore_0").getClass());
        assertEquals(Istore1.class, InstructionFactory.getByOpName("istore_1").getClass());
        assertEquals(Istore2.class, InstructionFactory.getByOpName("istore_2").getClass());
        assertEquals(Istore3.class, InstructionFactory.getByOpName("istore_3").getClass());
        assertEquals(Lstore0.class, InstructionFactory.getByOpName("lstore_0").getClass());
        assertEquals(Lstore1.class, InstructionFactory.getByOpName("lstore_1").getClass());
        assertEquals(Lstore2.class, InstructionFactory.getByOpName("lstore_2").getClass());
        assertEquals(Lstore3.class, InstructionFactory.getByOpName("lstore_3").getClass());
        assertEquals(Fstore0.class, InstructionFactory.getByOpName("fstore_0").getClass());
        assertEquals(Fstore1.class, InstructionFactory.getByOpName("fstore_1").getClass());
        assertEquals(Fstore2.class, InstructionFactory.getByOpName("fstore_2").getClass());
        assertEquals(Fstore3.class, InstructionFactory.getByOpName("fstore_3").getClass());
        assertEquals(Dstore0.class, InstructionFactory.getByOpName("dstore_0").getClass());
        assertEquals(Dstore1.class, InstructionFactory.getByOpName("dstore_1").getClass());
        assertEquals(Dstore2.class, InstructionFactory.getByOpName("dstore_2").getClass());
        assertEquals(Dstore3.class, InstructionFactory.getByOpName("dstore_3").getClass());
        assertEquals(Astore0.class, InstructionFactory.getByOpName("astore_0").getClass());
        assertEquals(Astore1.class, InstructionFactory.getByOpName("astore_1").getClass());
        assertEquals(Astore2.class, InstructionFactory.getByOpName("astore_2").getClass());
        assertEquals(Astore3.class, InstructionFactory.getByOpName("astore_3").getClass());
        assertEquals(IAstore.class, InstructionFactory.getByOpName("iastore").getClass());
        assertEquals(LAstore.class, InstructionFactory.getByOpName("lastore").getClass());
        assertEquals(FAstore.class, InstructionFactory.getByOpName("fastore").getClass());
        assertEquals(DAstore.class, InstructionFactory.getByOpName("dastore").getClass());
        assertEquals(AAstore.class, InstructionFactory.getByOpName("aastore").getClass());
        assertEquals(BAstore.class, InstructionFactory.getByOpName("bastore").getClass());
        assertEquals(CAstore.class, InstructionFactory.getByOpName("castore").getClass());
        assertEquals(SAstore.class, InstructionFactory.getByOpName("sastore").getClass());

        // Stack
        assertEquals(Pop.class, InstructionFactory.getByOpName("pop").getClass());
        assertEquals(Pop2.class, InstructionFactory.getByOpName("pop2").getClass());
        assertEquals(Dup.class, InstructionFactory.getByOpName("dup").getClass());
        assertEquals(Dupx1.class, InstructionFactory.getByOpName("dup_x1").getClass());
        assertEquals(Dupx2.class, InstructionFactory.getByOpName("dup_x2").getClass());
        assertEquals(Dup2.class, InstructionFactory.getByOpName("dup2").getClass());
        assertEquals(Dup2x1.class, InstructionFactory.getByOpName("dup2_x1").getClass());
        assertEquals(Dup2x2.class, InstructionFactory.getByOpName("dup2_x2").getClass());
        assertEquals(Swap.class, InstructionFactory.getByOpName("swap").getClass());

        // Math
        assertEquals(Iadd.class, InstructionFactory.getByOpName("iadd").getClass());
        assertEquals(Ladd.class, InstructionFactory.getByOpName("ladd").getClass());
        assertEquals(Fadd.class, InstructionFactory.getByOpName("fadd").getClass());
        assertEquals(Dadd.class, InstructionFactory.getByOpName("dadd").getClass());
        assertEquals(Isub.class, InstructionFactory.getByOpName("isub").getClass());
        assertEquals(Lsub.class, InstructionFactory.getByOpName("lsub").getClass());
        assertEquals(Fsub.class, InstructionFactory.getByOpName("fsub").getClass());
        assertEquals(Dsub.class, InstructionFactory.getByOpName("dsub").getClass());
        assertEquals(Imul.class, InstructionFactory.getByOpName("imul").getClass());
        assertEquals(Lmul.class, InstructionFactory.getByOpName("lmul").getClass());
        assertEquals(Fmul.class, InstructionFactory.getByOpName("fmul").getClass());
        assertEquals(Dmul.class, InstructionFactory.getByOpName("dmul").getClass());
        assertEquals(Idiv.class, InstructionFactory.getByOpName("idiv").getClass());
        assertEquals(Ldiv.class, InstructionFactory.getByOpName("ldiv").getClass());
        assertEquals(Fdiv.class, InstructionFactory.getByOpName("fdiv").getClass());
        assertEquals(Ddiv.class, InstructionFactory.getByOpName("ddiv").getClass());
        assertEquals(Irem.class, InstructionFactory.getByOpName("irem").getClass());
        assertEquals(Lrem.class, InstructionFactory.getByOpName("lrem").getClass());
        assertEquals(Frem.class, InstructionFactory.getByOpName("frem").getClass());
        assertEquals(Drem.class, InstructionFactory.getByOpName("drem").getClass());
        assertEquals(Ineg.class, InstructionFactory.getByOpName("ineg").getClass());
        assertEquals(Lneg.class, InstructionFactory.getByOpName("lneg").getClass());
        assertEquals(Fneg.class, InstructionFactory.getByOpName("fneg").getClass());
        assertEquals(Dneg.class, InstructionFactory.getByOpName("dneg").getClass());
        assertEquals(Ishl.class, InstructionFactory.getByOpName("ishl").getClass());
        assertEquals(Lshl.class, InstructionFactory.getByOpName("lshl").getClass());
        assertEquals(Ishr.class, InstructionFactory.getByOpName("ishr").getClass());
        assertEquals(Lshr.class, InstructionFactory.getByOpName("lshr").getClass());
        assertEquals(Iushr.class, InstructionFactory.getByOpName("iushr").getClass());
        assertEquals(Lushr.class, InstructionFactory.getByOpName("lushr").getClass());
        assertEquals(Iand.class, InstructionFactory.getByOpName("iand").getClass());
        assertEquals(Land.class, InstructionFactory.getByOpName("land").getClass());
        assertEquals(Ior.class, InstructionFactory.getByOpName("ior").getClass());
        assertEquals(Lor.class, InstructionFactory.getByOpName("lor").getClass());
        assertEquals(Ixor.class, InstructionFactory.getByOpName("ixor").getClass());
        assertEquals(Lxor.class, InstructionFactory.getByOpName("lxor").getClass());
        assertEquals(Iinc.class, InstructionFactory.getByOpName("iinc").getClass());

        // Conversions
        assertEquals(I2L.class, InstructionFactory.getByOpName("i2l").getClass());
        assertEquals(I2F.class, InstructionFactory.getByOpName("i2f").getClass());
        assertEquals(I2D.class, InstructionFactory.getByOpName("i2d").getClass());
        assertEquals(L2I.class, InstructionFactory.getByOpName("l2i").getClass());
        assertEquals(L2F.class, InstructionFactory.getByOpName("l2f").getClass());
        assertEquals(L2D.class, InstructionFactory.getByOpName("l2d").getClass());
        assertEquals(F2I.class, InstructionFactory.getByOpName("f2i").getClass());
        assertEquals(F2L.class, InstructionFactory.getByOpName("f2l").getClass());
        assertEquals(F2D.class, InstructionFactory.getByOpName("f2d").getClass());
        assertEquals(D2I.class, InstructionFactory.getByOpName("d2i").getClass());
        assertEquals(D2L.class, InstructionFactory.getByOpName("d2l").getClass());
        assertEquals(D2F.class, InstructionFactory.getByOpName("d2f").getClass());
        assertEquals(I2B.class, InstructionFactory.getByOpName("i2b").getClass());
        assertEquals(I2C.class, InstructionFactory.getByOpName("i2c").getClass());
        assertEquals(I2S.class, InstructionFactory.getByOpName("i2s").getClass());

        // Comparisons
        assertEquals(Lcmp.class, InstructionFactory.getByOpName("lcmp").getClass());
        assertEquals(Fcmpl.class, InstructionFactory.getByOpName("fcmpl").getClass());
        assertEquals(Fcmpg.class, InstructionFactory.getByOpName("fcmpg").getClass());
        assertEquals(Dcmpl.class, InstructionFactory.getByOpName("dcmpl").getClass());
        assertEquals(Dcmpg.class, InstructionFactory.getByOpName("dcmpg").getClass());
        assertEquals(Ifeq.class, InstructionFactory.getByOpName("ifeq").getClass());
        assertEquals(Ifne.class, InstructionFactory.getByOpName("ifne").getClass());
        assertEquals(Iflt.class, InstructionFactory.getByOpName("iflt").getClass());
        assertEquals(Ifge.class, InstructionFactory.getByOpName("ifge").getClass());
        assertEquals(Ifgt.class, InstructionFactory.getByOpName("ifgt").getClass());
        assertEquals(Ifle.class, InstructionFactory.getByOpName("ifle").getClass());
        assertEquals(IfIcmpeq.class, InstructionFactory.getByOpName("if_icmpeq").getClass());
        assertEquals(IfIcmpne.class, InstructionFactory.getByOpName("if_icmpne").getClass());
        assertEquals(IfIcmplt.class, InstructionFactory.getByOpName("if_icmplt").getClass());
        assertEquals(IfIcmpge.class, InstructionFactory.getByOpName("if_icmpge").getClass());
        assertEquals(IfIcmpgt.class, InstructionFactory.getByOpName("if_icmpgt").getClass());
        assertEquals(IfIcmple.class, InstructionFactory.getByOpName("if_icmple").getClass());
        assertEquals(IfAcmpeq.class, InstructionFactory.getByOpName("if_acmpeq").getClass());
        assertEquals(IfAcmpne.class, InstructionFactory.getByOpName("if_acmpne").getClass());

        // Control
        assertEquals(Goto.class, InstructionFactory.getByOpName("goto").getClass());
        assertEquals(Jsr.class, InstructionFactory.getByOpName("jsr").getClass());
        assertEquals(Ret.class, InstructionFactory.getByOpName("ret").getClass());
        assertEquals(Tableswitch.class, InstructionFactory.getByOpName("tableswitch").getClass());
        assertEquals(Lookupswitch.class, InstructionFactory.getByOpName("lookupswitch").getClass());
        assertEquals(Ireturn.class, InstructionFactory.getByOpName("ireturn").getClass());
        assertEquals(Lreturn.class, InstructionFactory.getByOpName("lreturn").getClass());
        assertEquals(Freturn.class, InstructionFactory.getByOpName("freturn").getClass());
        assertEquals(Dreturn.class, InstructionFactory.getByOpName("dreturn").getClass());
        assertEquals(Areturn.class, InstructionFactory.getByOpName("areturn").getClass());
        assertEquals(Return.class, InstructionFactory.getByOpName("return").getClass());

        // References
        assertEquals(Getstatic.class, InstructionFactory.getByOpName("getstatic").getClass());
        assertEquals(Putstatic.class, InstructionFactory.getByOpName("putstatic").getClass());
        assertEquals(Getfield.class, InstructionFactory.getByOpName("getfield").getClass());
        assertEquals(Putfield.class, InstructionFactory.getByOpName("putfield").getClass());
        assertEquals(Invokevirtual.class, InstructionFactory.getByOpName("invokevirtual").getClass());
        assertEquals(Invokespecial.class, InstructionFactory.getByOpName("invokespecial").getClass());
        assertEquals(Invokestatic.class, InstructionFactory.getByOpName("invokestatic").getClass());
        assertEquals(Invokeinterface.class, InstructionFactory.getByOpName("invokeinterface").getClass());
        assertEquals(Invokedynamic.class, InstructionFactory.getByOpName("invokedynamic").getClass());
        assertEquals(New.class, InstructionFactory.getByOpName("new").getClass());
        assertEquals(Newarray.class, InstructionFactory.getByOpName("newarray").getClass());
        assertEquals(Anewarray.class, InstructionFactory.getByOpName("anewarray").getClass());
        assertEquals(Arraylength.class, InstructionFactory.getByOpName("arraylength").getClass());
        assertEquals(Athrow.class, InstructionFactory.getByOpName("athrow").getClass());
        assertEquals(Checkcast.class, InstructionFactory.getByOpName("checkcase").getClass());
        assertEquals(Instanceof.class, InstructionFactory.getByOpName("instanceof").getClass());
        assertEquals(Monitorenter.class, InstructionFactory.getByOpName("monitorenter").getClass());
        assertEquals(Monitorexit.class, InstructionFactory.getByOpName("monitorexit").getClass());

        // Extended
        assertEquals(Wide.class, InstructionFactory.getByOpName("wide").getClass());
        assertEquals(Multianewarray.class, InstructionFactory.getByOpName("multianewarray").getClass());
        assertEquals(Ifnull.class, InstructionFactory.getByOpName("ifnull").getClass());
        assertEquals(Ifnonnull.class, InstructionFactory.getByOpName("ifnonnull").getClass());
        assertEquals(Gotow.class, InstructionFactory.getByOpName("goto_w").getClass());
        assertEquals(Jsrw.class, InstructionFactory.getByOpName("jsr_w").getClass());

        // Reserved
        assertEquals(Breakpoint.class, InstructionFactory.getByOpName("breakpoint").getClass());
        assertEquals(Impdep1.class, InstructionFactory.getByOpName("impdep1").getClass());
        assertEquals(Impdep2.class, InstructionFactory.getByOpName("impdep2").getClass());
    }
}